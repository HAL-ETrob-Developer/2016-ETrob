/* ---------------------------------------------------------------------------------------------- */
// GyroAdmin_ohs.h
// EV3_HAL2016\デバイス制御\ジャイロセンサ管理
// ジャイロセンサの値取得を管理する。ジャイロセンサの値の取得タイミングは一定でないとならない
/* ---------------------------------------------------------------------------------------------- */
// 番号    日付        氏名        更新履歴
/* ---------------------------------------------------------------------------------------------- */
// GR0000  2016/07/14  田中　翔吾  新規作成
// GR0001  2016/07/15  大塚　信晶  コンパイルチェック単体テスト通過
// GR0002  2016/07/19  大塚　信晶  結合テスト通過
// GR0003  2016/09/04  大塚　信晶  バランス状態の追加
// GR0004  2016/09/18  大塚　信晶  ジャイロセンサ異常対策
/* ---------------------------------------------------------------------------------------------- */

#ifndef DEVICEOPE_GYRO_ADMIN_OHS_H_
#define DEVICEOPE_GYRO_ADMIN_OHS_H_

/* ---------------------------------------------------------------------------------------------- */
// includeファイル
/* ---------------------------------------------------------------------------------------------- */

#include "ev3api.h"		// 大会提供API＠基本ヘッダー
#include "GyroSensor.h" // ev3api : ジャイロセンサ

/* ---------------------------------------------------------------------------------------------- */
// 定数定義
/* ---------------------------------------------------------------------------------------------- */

/* フィルタリング用＠ローパスフィルタ */
#define QUEUE_MAX		(        127 )// キュー個数

/* フィルタリング用＠係数 */
#define	GYR_GAIN_NOW	(       0.3F )// 現在
#define	GYR_GAIN_OLD	(       0.7F )// 過去

/* 閾値 */
#define	THRESHOLD_STABILITY		(          9 )// 安定
#define	THRESHOLD_UNSTABILITY	(         40 )// 不安定
#define	THRESHOLD_FALLING		(        200 )// 転倒

/* ---------------------------------------------------------------------------------------------- */
// クラス名      : GyroAdmin_ohs
// 役割名        : ジャイロセンサ管理
// 役割概要      : ジャイロセンサにより取得した角速度値のフィルタリング・取得周期管理・
//                状態判別を行う。API「ev3api::GyroSensor」を用いる。
// 作成日        : 2016/07/14  田中　翔吾＠新規作成
/* ---------------------------------------------------------------------------------------------- */
class GyroAdmin_ohs
{
    public:/* ------------------------------------------------------------------------ パブリック */
		/* オブジェクトの生成 */
		GyroAdmin_ohs( ev3api::GyroSensor& gyro_sensor );// コンストラクタ
		~GyroAdmin_ohs();// デストラクタ

		/* メソッド */
		bool initDegree();// ジャイロセンサの初期化
		void callValueUpdate( void );//ジャイロセンサの値の更新
		void callValueUpdateDummy( void );//ジャイロセンサ異常の為のダミーメソッド＠20160918
		
		int16_t    getValue( void );      //ジャイロセンサの値の取得(直接値)
		int16_t    getFilterValue( void );//ジャイロセンサの値の取得(フィルタリング)
		GYRO_STATE　getState( void );      //ジャイロセンサ状態の取得
	
    private:/* --------------------------------------------------------------------- プライベート */
		/* メンバ */
		ev3api::GyroSensor& mGyroSensor;// ジャイロセンサを扱う
		int16_t mNowGyroValue;// フィルタリング用＠直近値
		int16_t mOldGyroValue;// フィルタリング用＠過去値
		int16_t mVelocity;    // フィルタリング後角速度値
		
		int16_t mOffSet;	  // 取得値オフセット＠個体差補正に重要です
		GYRO_STATE mState;	  // 本体安定度の状態＠hal_ev3_std.hにて定義
		int16_t mQueue[QUEUE_MAX];// フィルタリング用値保持領域
		uint16_t mQNo;// キュー使用位置
		bool mInit;   // 初期化状態

};// class GyroAdmin_ohs

#endif  // DEVICEOPE_GYROADMIN_OHS_H_
/* ---------------------------------------------------------------------------------------------- */
/*                          Copyright HAL College of Technology & Design                          */
/* ---------------------------------------------------------------------------------------------- */
